security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            #json_login:
            #    check_path: /login-json
            #    success_handler: lexik_jwt_authentication.handler.authentication_success
            #    failure_handler: lexik_jwt_authentication.handler.authentication_failure
            #guard:
            #    authenticators:
            #        - lexik_jwt_authentication.jwt_token_authenticator

            custom_authenticator: App\Security\MyAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/en/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/en/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login-json, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/quienes-somos, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/en/quienes-somos, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/fondos_json, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }
        #- { path: ^/fondos, roles: ROLE_USER }